//
//  HOTPTests.swift
//  Security
//
//  Created by Michel Tilman on 29/06/2020.
//  Copyright Â© 2020 Dotted.Pair.
//  Licensed under Apache License v2.0.
//

import XCTest
import Authentication

/**
 Tests generation and validation of HOTP passwords.
 */
final class HOTPTests: XCTestCase {

    // MARK: Testing RFC 4226 reference passwords
    
    // Tests SHA1 for counters 0 through 9 truncating to 6 digits.
    func testRFC4226() {
        guard let secret = "12345678901234567890".data(using: .utf8) else { return XCTFail("nil secret") }
        let hotp = HOTP(secret: secret, algorithm: .sha1)
        let expected = ["755224", "287082", "359152", "969429", "338314", "254676", "287922", "162583", "399871", "520489", ""]

        for i in 0 ... 9 {
            XCTAssertEqual(hotp.generatePassword(for: Int64(i)), expected[i])
        }
    }
    
    // Tests results for different counter / digits / hash algorithms combinations.
    func testReferenceData() {
        guard let secret = "12345678901234567890".data(using: .utf8) else { return XCTFail("nil secret") }

        for (counter, digits, hashName, otp) in referenceData {
            guard let algorithm = HOTP.Algorithm(rawValue: hashName) else { return XCTFail("Unsupported algorithm") }
            let hotp = HOTP(secret: secret, algorithm: algorithm, digits: digits)
            
            XCTAssertEqual(hotp.generatePassword(for: Int64(counter)), otp)
        }
    }
    
}


/**
 Test data.
*/

// One-time passwords generated by the Java reference implementation for multiple counter / digits / algorithm combinations.
fileprivate let referenceData: [(counter: Int, digits: Int, algorithm: String, otp: String)] = [
    (counter: 1, digits: 1, algorithm: "SHA1", otp: "2"),
    (counter: 1, digits: 1, algorithm: "SHA256", otp: "4"),
    (counter: 1, digits: 1, algorithm: "SHA384", otp: "5"),
    (counter: 1, digits: 1, algorithm: "SHA512", otp: "7"),
    (counter: 1, digits: 2, algorithm: "SHA1", otp: "82"),
    (counter: 1, digits: 2, algorithm: "SHA256", otp: "74"),
    (counter: 1, digits: 2, algorithm: "SHA384", otp: "75"),
    (counter: 1, digits: 2, algorithm: "SHA512", otp: "47"),
    (counter: 1, digits: 3, algorithm: "SHA1", otp: "082"),
    (counter: 1, digits: 3, algorithm: "SHA256", otp: "374"),
    (counter: 1, digits: 3, algorithm: "SHA384", otp: "675"),
    (counter: 1, digits: 3, algorithm: "SHA512", otp: "147"),
    (counter: 1, digits: 4, algorithm: "SHA1", otp: "7082"),
    (counter: 1, digits: 4, algorithm: "SHA256", otp: "7374"),
    (counter: 1, digits: 4, algorithm: "SHA384", otp: "0675"),
    (counter: 1, digits: 4, algorithm: "SHA512", otp: "2147"),
    (counter: 1, digits: 5, algorithm: "SHA1", otp: "87082"),
    (counter: 1, digits: 5, algorithm: "SHA256", otp: "47374"),
    (counter: 1, digits: 5, algorithm: "SHA384", otp: "80675"),
    (counter: 1, digits: 5, algorithm: "SHA512", otp: "42147"),
    (counter: 1, digits: 6, algorithm: "SHA1", otp: "287082"),
    (counter: 1, digits: 6, algorithm: "SHA256", otp: "247374"),
    (counter: 1, digits: 6, algorithm: "SHA384", otp: "080675"),
    (counter: 1, digits: 6, algorithm: "SHA512", otp: "342147"),
    (counter: 1, digits: 7, algorithm: "SHA1", otp: "4287082"),
    (counter: 1, digits: 7, algorithm: "SHA256", otp: "2247374"),
    (counter: 1, digits: 7, algorithm: "SHA384", otp: "6080675"),
    (counter: 1, digits: 7, algorithm: "SHA512", otp: "9342147"),
    (counter: 1, digits: 8, algorithm: "SHA1", otp: "94287082"),
    (counter: 1, digits: 8, algorithm: "SHA256", otp: "32247374"),
    (counter: 1, digits: 8, algorithm: "SHA384", otp: "46080675"),
    (counter: 1, digits: 8, algorithm: "SHA512", otp: "69342147"),
    (counter: 1000, digits: 1, algorithm: "SHA1", otp: "0"),
    (counter: 1000, digits: 1, algorithm: "SHA256", otp: "8"),
    (counter: 1000, digits: 1, algorithm: "SHA384", otp: "3"),
    (counter: 1000, digits: 1, algorithm: "SHA512", otp: "1"),
    (counter: 1000, digits: 2, algorithm: "SHA1", otp: "30"),
    (counter: 1000, digits: 2, algorithm: "SHA256", otp: "38"),
    (counter: 1000, digits: 2, algorithm: "SHA384", otp: "73"),
    (counter: 1000, digits: 2, algorithm: "SHA512", otp: "11"),
    (counter: 1000, digits: 3, algorithm: "SHA1", otp: "130"),
    (counter: 1000, digits: 3, algorithm: "SHA256", otp: "738"),
    (counter: 1000, digits: 3, algorithm: "SHA384", otp: "073"),
    (counter: 1000, digits: 3, algorithm: "SHA512", otp: "611"),
    (counter: 1000, digits: 4, algorithm: "SHA1", otp: "0130"),
    (counter: 1000, digits: 4, algorithm: "SHA256", otp: "9738"),
    (counter: 1000, digits: 4, algorithm: "SHA384", otp: "0073"),
    (counter: 1000, digits: 4, algorithm: "SHA512", otp: "6611"),
    (counter: 1000, digits: 5, algorithm: "SHA1", otp: "50130"),
    (counter: 1000, digits: 5, algorithm: "SHA256", otp: "59738"),
    (counter: 1000, digits: 5, algorithm: "SHA384", otp: "00073"),
    (counter: 1000, digits: 5, algorithm: "SHA512", otp: "96611"),
    (counter: 1000, digits: 6, algorithm: "SHA1", otp: "450130"),
    (counter: 1000, digits: 6, algorithm: "SHA256", otp: "959738"),
    (counter: 1000, digits: 6, algorithm: "SHA384", otp: "700073"),
    (counter: 1000, digits: 6, algorithm: "SHA512", otp: "796611"),
    (counter: 1000, digits: 7, algorithm: "SHA1", otp: "2450130"),
    (counter: 1000, digits: 7, algorithm: "SHA256", otp: "7959738"),
    (counter: 1000, digits: 7, algorithm: "SHA384", otp: "7700073"),
    (counter: 1000, digits: 7, algorithm: "SHA512", otp: "3796611"),
    (counter: 1000, digits: 8, algorithm: "SHA1", otp: "22450130"),
    (counter: 1000, digits: 8, algorithm: "SHA256", otp: "77959738"),
    (counter: 1000, digits: 8, algorithm: "SHA384", otp: "47700073"),
    (counter: 1000, digits: 8, algorithm: "SHA512", otp: "53796611"),
    (counter: 1000000, digits: 1, algorithm: "SHA1", otp: "0"),
    (counter: 1000000, digits: 1, algorithm: "SHA256", otp: "8"),
    (counter: 1000000, digits: 1, algorithm: "SHA384", otp: "7"),
    (counter: 1000000, digits: 1, algorithm: "SHA512", otp: "4"),
    (counter: 1000000, digits: 2, algorithm: "SHA1", otp: "80"),
    (counter: 1000000, digits: 2, algorithm: "SHA256", otp: "18"),
    (counter: 1000000, digits: 2, algorithm: "SHA384", otp: "17"),
    (counter: 1000000, digits: 2, algorithm: "SHA512", otp: "94"),
    (counter: 1000000, digits: 3, algorithm: "SHA1", otp: "580"),
    (counter: 1000000, digits: 3, algorithm: "SHA256", otp: "718"),
    (counter: 1000000, digits: 3, algorithm: "SHA384", otp: "117"),
    (counter: 1000000, digits: 3, algorithm: "SHA512", otp: "994"),
    (counter: 1000000, digits: 4, algorithm: "SHA1", otp: "5580"),
    (counter: 1000000, digits: 4, algorithm: "SHA256", otp: "4718"),
    (counter: 1000000, digits: 4, algorithm: "SHA384", otp: "6117"),
    (counter: 1000000, digits: 4, algorithm: "SHA512", otp: "0994"),
    (counter: 1000000, digits: 5, algorithm: "SHA1", otp: "65580"),
    (counter: 1000000, digits: 5, algorithm: "SHA256", otp: "34718"),
    (counter: 1000000, digits: 5, algorithm: "SHA384", otp: "76117"),
    (counter: 1000000, digits: 5, algorithm: "SHA512", otp: "70994"),
    (counter: 1000000, digits: 6, algorithm: "SHA1", otp: "665580"),
    (counter: 1000000, digits: 6, algorithm: "SHA256", otp: "434718"),
    (counter: 1000000, digits: 6, algorithm: "SHA384", otp: "676117"),
    (counter: 1000000, digits: 6, algorithm: "SHA512", otp: "070994"),
    (counter: 1000000, digits: 7, algorithm: "SHA1", otp: "3665580"),
    (counter: 1000000, digits: 7, algorithm: "SHA256", otp: "0434718"),
    (counter: 1000000, digits: 7, algorithm: "SHA384", otp: "4676117"),
    (counter: 1000000, digits: 7, algorithm: "SHA512", otp: "7070994"),
    (counter: 1000000, digits: 8, algorithm: "SHA1", otp: "03665580"),
    (counter: 1000000, digits: 8, algorithm: "SHA256", otp: "10434718"),
    (counter: 1000000, digits: 8, algorithm: "SHA384", otp: "24676117"),
    (counter: 1000000, digits: 8, algorithm: "SHA512", otp: "57070994"),
    (counter: 1000000000, digits: 1, algorithm: "SHA1", otp: "6"),
    (counter: 1000000000, digits: 1, algorithm: "SHA256", otp: "0"),
    (counter: 1000000000, digits: 1, algorithm: "SHA384", otp: "8"),
    (counter: 1000000000, digits: 1, algorithm: "SHA512", otp: "3"),
    (counter: 1000000000, digits: 2, algorithm: "SHA1", otp: "86"),
    (counter: 1000000000, digits: 2, algorithm: "SHA256", otp: "00"),
    (counter: 1000000000, digits: 2, algorithm: "SHA384", otp: "28"),
    (counter: 1000000000, digits: 2, algorithm: "SHA512", otp: "73"),
    (counter: 1000000000, digits: 3, algorithm: "SHA1", otp: "286"),
    (counter: 1000000000, digits: 3, algorithm: "SHA256", otp: "500"),
    (counter: 1000000000, digits: 3, algorithm: "SHA384", otp: "328"),
    (counter: 1000000000, digits: 3, algorithm: "SHA512", otp: "873"),
    (counter: 1000000000, digits: 4, algorithm: "SHA1", otp: "2286"),
    (counter: 1000000000, digits: 4, algorithm: "SHA256", otp: "2500"),
    (counter: 1000000000, digits: 4, algorithm: "SHA384", otp: "7328"),
    (counter: 1000000000, digits: 4, algorithm: "SHA512", otp: "8873"),
    (counter: 1000000000, digits: 5, algorithm: "SHA1", otp: "02286"),
    (counter: 1000000000, digits: 5, algorithm: "SHA256", otp: "92500"),
    (counter: 1000000000, digits: 5, algorithm: "SHA384", otp: "47328"),
    (counter: 1000000000, digits: 5, algorithm: "SHA512", otp: "58873"),
    (counter: 1000000000, digits: 6, algorithm: "SHA1", otp: "602286"),
    (counter: 1000000000, digits: 6, algorithm: "SHA256", otp: "992500"),
    (counter: 1000000000, digits: 6, algorithm: "SHA384", otp: "547328"),
    (counter: 1000000000, digits: 6, algorithm: "SHA512", otp: "658873"),
    (counter: 1000000000, digits: 7, algorithm: "SHA1", otp: "8602286"),
    (counter: 1000000000, digits: 7, algorithm: "SHA256", otp: "4992500"),
    (counter: 1000000000, digits: 7, algorithm: "SHA384", otp: "0547328"),
    (counter: 1000000000, digits: 7, algorithm: "SHA512", otp: "2658873"),
    (counter: 1000000000, digits: 8, algorithm: "SHA1", otp: "78602286"),
    (counter: 1000000000, digits: 8, algorithm: "SHA256", otp: "44992500"),
    (counter: 1000000000, digits: 8, algorithm: "SHA384", otp: "70547328"),
    (counter: 1000000000, digits: 8, algorithm: "SHA512", otp: "12658873"),
]


/**
 Function test suite.
 */
extension HOTPTests {
    
    static var allTests = [
        ("testRFC4226", testRFC4226),
        ("testReferenceData", testReferenceData)
    ]
    
}
